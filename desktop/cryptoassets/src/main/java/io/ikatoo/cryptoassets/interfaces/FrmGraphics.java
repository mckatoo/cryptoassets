/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package io.ikatoo.cryptoassets.interfaces;

import io.ikatoo.cryptoassets.constants.Intervals;
import io.ikatoo.cryptoassets.interfaces.chart.candlestick.CandlestickChart;
import io.ikatoo.cryptoassets.interfaces.chart.candlestick.FxMarketPxFeeder;
import io.ikatoo.cryptoassets.interfaces.chart.candlestick.JfreeCandlestickChart;
import io.ikatoo.cryptoassets.services.binance.GeneralService;
import io.ikatoo.cryptoassets.services.binance.MarketDataService;
import java.beans.PropertyVetoException;
import java.io.IOException;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.TimeoutException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JInternalFrame;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import org.json.JSONArray;

/**
 *
 * @author mckatoo
 */
public class FrmGraphics extends javax.swing.JInternalFrame {

    public FrmGraphics() {
        initComponents();

        this.asset = "BTC";
        this.interval = Intervals.ONE_MINUTE;
        JSONArray symbols = null;
        try {
            symbols = new GeneralService().getAvailableSimbolsForTrade();
        } catch (IOException | InterruptedException ex) {
            Logger.getLogger(FrmGraphics.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (Object symbol : symbols) {
            comboAssets.addItem(symbol.toString());
        }
        comboAssets.setSelectedItem(this.asset);

        String[] intervals = Intervals.Intervals();

        for (String interv : intervals) {
            comboInterval.addItem(interv);
        }
        comboInterval.setSelectedItem(this.interval);
    }

    private String asset = "BTC";
    private String interval = Intervals.ONE_MINUTE;

    private final MarketDataService marketDataService = new MarketDataService();

    private static FrmGraphics instance;
    CandlestickChart chart = new CandlestickChart();

    private static FrmGraphics getInstance() throws TimeoutException, ExecutionException {
        if (instance == null) {
            instance = new FrmGraphics();
        }
        return instance;
    }

    private void createAndShowGUI() {
        JInternalFrame frame = new JInternalFrame(title);
        frame.setBorder(null);
        frame.setClosable(false);
        ((BasicInternalFrameUI) frame.getUI()).setNorthPane(null);
        int width = panelChart.getSize().width;
        int height = panelChart.getSize().height;
        JfreeCandlestickChart jfreeCandlestickChart = new JfreeCandlestickChart(asset, width, height);
        new FxMarketPxFeeder(jfreeCandlestickChart, interval, asset).run();
        frame.setContentPane(jfreeCandlestickChart);
        panelChart.add(frame);
        frame.setResizable(false);
        frame.pack();
        frame.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        comboInterval = new javax.swing.JComboBox<>();
        comboAssets = new javax.swing.JComboBox<>();
        panelChart = new javax.swing.JDesktopPane();

        setBackground(new java.awt.Color(254, 254, 254));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        comboInterval.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                comboIntervalPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        comboAssets.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        comboAssets.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                comboAssetsPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(comboInterval, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 348, Short.MAX_VALUE)
                .addComponent(comboAssets, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboInterval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboAssets))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        panelChart.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                panelChartComponentShown(evt);
            }
        });

        javax.swing.GroupLayout panelChartLayout = new javax.swing.GroupLayout(panelChart);
        panelChart.setLayout(panelChartLayout);
        panelChartLayout.setHorizontalGroup(
            panelChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelChartLayout.setVerticalGroup(
            panelChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelChart)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(jLabel1)
                        .addGap(0, 263, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelChart)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        createAndShowGUI();
    }//GEN-LAST:event_formComponentShown

    private void comboIntervalPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_comboIntervalPopupMenuWillBecomeInvisible
        this.interval = comboInterval.getSelectedItem().toString();
        createAndShowGUI();
    }//GEN-LAST:event_comboIntervalPopupMenuWillBecomeInvisible

    private void comboAssetsPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_comboAssetsPopupMenuWillBecomeInvisible
        this.asset = comboAssets.getSelectedItem().toString();
        createAndShowGUI();
    }//GEN-LAST:event_comboAssetsPopupMenuWillBecomeInvisible

    private void panelChartComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_panelChartComponentShown

    }//GEN-LAST:event_panelChartComponentShown


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboAssets;
    private javax.swing.JComboBox<String> comboInterval;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JDesktopPane panelChart;
    // End of variables declaration//GEN-END:variables

}
